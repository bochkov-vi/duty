package com.bochkov.duty.planning.model;
import com.bochkov.duty.planning.model.*;

import org.optaplanner.core.api.score.buildin.hardmediumsoft.*;
global HardMediumSoftScoreHolder scoreHolder;

rule "count KO on day"
    when
        $dutyType:PlanningDutyType(id==3)
        $day:PlanningDay()
        $cnt: Number(intValue!=1) from accumulate(
            PlanningDuty(dutyType==$dutyType, day==$day), count(1));
    then
        //System.err.println("count is:"+ $cnt);
        scoreHolder.addHardConstraintMatch(kcontext,-1);
end

rule "dont solid KO on person"
    when
        $person:PlanningPerson()
        $dutyType:PlanningDutyType(id==3)
        PlanningDuty($day:day,person==$person,dutyType==$dutyType)
        PlanningDuty(day.next==$day,person==$person,dutyType==$dutyType)

    then
        //System.err.println("count is:"+ $cnt);
        scoreHolder.addHardConstraintMatch(kcontext,-1);
end

/*rule "count KO for person"
    when
        $dutyType:PlanningDutyType(id==3)
        $person:PlanningPerson()
        $cnt: Number(intValue<2) from accumulate(
            PlanningDuty(dutyType==$dutyType, person==$person), count(1));
    then
        //System.err.println("count is:"+ $cnt);
        scoreHolder.addMediumConstraintMatch(kcontext,-1);
end*/

rule "more interval KO for person"
    when
        PlanningDuty(dutyType!=null,dutyType.id==3,daysToNext<7,$daysToNext:daysToNext-7)
    then
        //System.err.println("count is:"+ $days);
        scoreHolder.addMediumConstraintMatch(kcontext,$daysToNext*2);
end


rule "меньше однотипных дней"
    when
        PlanningDuty(dutyType!=null,dutyType.id==3,$person:person,$dayType:day.dayType,$dutyType:dutyType)
         Number(intValue>1,$cnt:intValue) from accumulate(
            PlanningDuty(dutyType==$dutyType, person==$person, day.dayType==$dayType), count(1));
    then
        //System.err.println("count is:"+ $cnt);
        scoreHolder.addMediumConstraintMatch(kcontext,-$cnt);
end
